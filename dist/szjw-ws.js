"use strict";var A=Object.defineProperty;var R=(n,e,t)=>e in n?A(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var _=(n,e,t)=>(R(n,typeof e!="symbol"?e+"":e,t),t);var y=(n,e,t)=>new Promise((s,i)=>{var o=a=>{try{r(t.next(a))}catch(u){i(u)}},c=a=>{try{r(t.throw(a))}catch(u){i(u)}},r=a=>a.done?s(a.value):Promise.resolve(a.value).then(o,c);r((t=t.apply(n,e)).next())});Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const h=require("rxjs"),x=require("vue"),N=require("vue3-oop"),f={LF:`
`,NULL:"\0"};class C{constructor(e){const{command:t,headers:s,body:i,binaryBody:o,escapeHeaderValues:c,skipContentLengthHeader:r}=e;this.command=t,this.headers=Object.assign({},s||{}),o?(this._binaryBody=o,this.isBinaryBody=!0):(this._body=i||"",this.isBinaryBody=!1),this.escapeHeaderValues=c||!1,this.skipContentLengthHeader=r||!1}get body(){return!this._body&&this.isBinaryBody&&(this._body=new TextDecoder().decode(this._binaryBody)),this._body||""}get binaryBody(){return!this._binaryBody&&!this.isBinaryBody&&(this._binaryBody=new TextEncoder().encode(this._body)),this._binaryBody}static fromRawFrame(e,t){const s={},i=o=>o.replace(/^\s+|\s+$/g,"");for(const o of e.headers.reverse()){o.indexOf(":");const c=i(o[0]);let r=i(o[1]);t&&e.command!=="CONNECT"&&e.command!=="CONNECTED"&&(r=C.hdrValueUnEscape(r)),s[c]=r}return new C({command:e.command,headers:s,binaryBody:e.binaryBody,escapeHeaderValues:t})}toString(){return this.serializeCmdAndHeaders()}serialize(){const e=this.serializeCmdAndHeaders();return this.isBinaryBody?C.toUnit8Array(e,this._binaryBody).buffer:e+this._body+f.NULL}serializeCmdAndHeaders(){const e=[this.command];this.skipContentLengthHeader&&delete this.headers["content-length"];for(const t of Object.keys(this.headers||{})){const s=this.headers[t];this.escapeHeaderValues&&this.command!=="CONNECT"&&this.command!=="CONNECTED"?e.push(`${t}:${C.hdrValueEscape(`${s}`)}`):e.push(`${t}:${s}`)}return(this.isBinaryBody||!this.isBodyEmpty()&&!this.skipContentLengthHeader)&&e.push(`content-length:${this.bodyLength()}`),e.join(f.LF)+f.LF+f.LF}isBodyEmpty(){return this.bodyLength()===0}bodyLength(){const e=this.binaryBody;return e?e.length:0}static sizeOfUTF8(e){return e?new TextEncoder().encode(e).length:0}static toUnit8Array(e,t){const s=new TextEncoder().encode(e),i=new Uint8Array([0]),o=new Uint8Array(s.length+t.length+i.length);return o.set(s),o.set(t,s.length),o.set(i,s.length+t.length),o}static marshall(e){return new C(e).serialize()}static hdrValueEscape(e){return e.replace(/\\/g,"\\\\").replace(/\r/g,"\\r").replace(/\n/g,"\\n").replace(/:/g,"\\c")}static hdrValueUnEscape(e){return e.replace(/\\r/g,"\r").replace(/\\n/g,`
`).replace(/\\c/g,":").replace(/\\\\/g,"\\")}}const I=0,k=10,E=13,F=58;class P{constructor(e,t){this.onFrame=e,this.onIncomingPing=t,this._encoder=new TextEncoder,this._decoder=new TextDecoder,this._token=[],this._initState()}parseChunk(e,t=!1){let s;if(typeof e=="string"?s=this._encoder.encode(e):s=new Uint8Array(e),t&&s[s.length-1]!==0){const i=new Uint8Array(s.length+1);i.set(s,0),i[s.length]=0,s=i}for(let i=0;i<s.length;i++){const o=s[i];this._onByte(o)}}_collectFrame(e){if(e!==I&&e!==E){if(e===k){this.onIncomingPing();return}this._onByte=this._collectCommand,this._reinjectByte(e)}}_collectCommand(e){if(e!==E){if(e===k){this._results.command=this._consumeTokenAsUTF8(),this._onByte=this._collectHeaders;return}this._consumeByte(e)}}_collectHeaders(e){if(e!==E){if(e===k){this._setupCollectBody();return}this._onByte=this._collectHeaderKey,this._reinjectByte(e)}}_reinjectByte(e){this._onByte(e)}_collectHeaderKey(e){if(e===F){this._headerKey=this._consumeTokenAsUTF8(),this._onByte=this._collectHeaderValue;return}this._consumeByte(e)}_collectHeaderValue(e){if(e!==E){if(e===k){this._results.headers.push([this._headerKey,this._consumeTokenAsUTF8()]),this._headerKey=void 0,this._onByte=this._collectHeaders;return}this._consumeByte(e)}}_setupCollectBody(){const e=this._results.headers.filter(t=>t[0]==="content-length")[0];e?(this._bodyBytesRemaining=parseInt(e[1],10),this._onByte=this._collectBodyFixedSize):this._onByte=this._collectBodyNullTerminated}_collectBodyNullTerminated(e){if(e===I){this._retrievedBody();return}this._consumeByte(e)}_collectBodyFixedSize(e){if(this._bodyBytesRemaining--===0){this._retrievedBody();return}this._consumeByte(e)}_retrievedBody(){this._results.binaryBody=this._consumeTokenAsRaw();try{this.onFrame(this._results)}catch(e){console.log("Ignoring an exception thrown by a frame handler. Original exception: ",e)}this._initState()}_consumeByte(e){this._token.push(e)}_consumeTokenAsUTF8(){return this._decoder.decode(this._consumeTokenAsRaw())}_consumeTokenAsRaw(){const e=new Uint8Array(this._token);return this._token=[],e}_initState(){this._results={command:void 0,headers:[],binaryBody:void 0},this._token=[],this._headerKey=void 0,this._onByte=this._collectFrame}}var g;(function(n){n[n.CONNECTING=0]="CONNECTING",n[n.OPEN=1]="OPEN",n[n.CLOSING=2]="CLOSING",n[n.CLOSED=3]="CLOSED"})(g=g||(g={}));var p;(function(n){n[n.ACTIVE=0]="ACTIVE",n[n.DEACTIVATING=1]="DEACTIVATING",n[n.INACTIVE=2]="INACTIVE"})(p=p||(p={}));class b{constructor(e){this.versions=e}supportedVersions(){return this.versions.join(",")}protocolVersions(){return this.versions.map(e=>`v${e.replace(".","")}.stomp`)}}b.V1_0="1.0";b.V1_1="1.1";b.V1_2="1.2";b.default=new b([b.V1_2,b.V1_1,b.V1_0]);function M(n,e){n.terminate=function(){const t=()=>{};this.onerror=t,this.onmessage=t,this.onopen=t;const s=new Date,i=Math.random().toString().substring(2,8),o=this.onclose;this.onclose=c=>{const r=new Date().getTime()-s.getTime();e(`Discarded socket (#${i})  closed after ${r}ms, with code/reason: ${c.code}/${c.reason}`)},this.close(),o==null||o.call(n,{code:4001,reason:`Quick discarding socket (#${i}) without waiting for the shutdown sequence.`,wasClean:!1})}}class j{constructor(e,t,s){this._client=e,this._webSocket=t,this._connected=!1,this._serverFrameHandlers={CONNECTED:i=>{this.debug(`connected to server ${i.headers.server}`),this._connected=!0,this._connectedVersion=i.headers.version,this._connectedVersion===b.V1_2&&(this._escapeHeaderValues=!0),this._setupHeartbeat(i.headers),this.onConnect(i)},MESSAGE:i=>{const o=i.headers.subscription,c=this._subscriptions[o]||this.onUnhandledMessage,r=i,a=this,u=this._connectedVersion===b.V1_2?r.headers.ack:r.headers["message-id"];r.ack=(S={})=>a.ack(u,o,S),r.nack=(S={})=>a.nack(u,o,S),c(r)},RECEIPT:i=>{const o=this._receiptWatchers[i.headers["receipt-id"]];o?(o(i),delete this._receiptWatchers[i.headers["receipt-id"]]):this.onUnhandledReceipt(i)},ERROR:i=>{this.onStompError(i)}},this._counter=0,this._subscriptions={},this._receiptWatchers={},this._partialData="",this._escapeHeaderValues=!1,this._lastServerActivityTS=Date.now(),this.debug=s.debug,this.stompVersions=s.stompVersions,this.connectHeaders=s.connectHeaders,this.disconnectHeaders=s.disconnectHeaders,this.heartbeatIncoming=s.heartbeatIncoming,this.heartbeatOutgoing=s.heartbeatOutgoing,this.splitLargeFrames=s.splitLargeFrames,this.maxWebSocketChunkSize=s.maxWebSocketChunkSize,this.forceBinaryWSFrames=s.forceBinaryWSFrames,this.logRawCommunication=s.logRawCommunication,this.appendMissingNULLonIncoming=s.appendMissingNULLonIncoming,this.discardWebsocketOnCommFailure=s.discardWebsocketOnCommFailure,this.onConnect=s.onConnect,this.onDisconnect=s.onDisconnect,this.onStompError=s.onStompError,this.onWebSocketClose=s.onWebSocketClose,this.onWebSocketError=s.onWebSocketError,this.onUnhandledMessage=s.onUnhandledMessage,this.onUnhandledReceipt=s.onUnhandledReceipt,this.onUnhandledFrame=s.onUnhandledFrame}get connectedVersion(){return this._connectedVersion}get connected(){return this._connected}start(){const e=new P(t=>{const s=C.fromRawFrame(t,this._escapeHeaderValues);this.logRawCommunication||this.debug(`<<< ${s}`),(this._serverFrameHandlers[s.command]||this.onUnhandledFrame)(s)},()=>{this.debug("<<< PONG")});this._webSocket.onmessage=t=>{if(this.debug("Received data"),this._lastServerActivityTS=Date.now(),this.logRawCommunication){const s=t.data instanceof ArrayBuffer?new TextDecoder().decode(t.data):t.data;this.debug(`<<< ${s}`)}e.parseChunk(t.data,this.appendMissingNULLonIncoming)},this._webSocket.onclose=t=>{this.debug(`Connection closed to ${this._webSocket.url}`),this._cleanUp(),this.onWebSocketClose(t)},this._webSocket.onerror=t=>{this.onWebSocketError(t)},this._webSocket.onopen=()=>{const t=Object.assign({},this.connectHeaders);this.debug("Web Socket Opened..."),t["accept-version"]=this.stompVersions.supportedVersions(),t["heart-beat"]=[this.heartbeatOutgoing,this.heartbeatIncoming].join(","),this._transmit({command:"CONNECT",headers:t})}}_setupHeartbeat(e){if(e.version!==b.V1_1&&e.version!==b.V1_2||!e["heart-beat"])return;const[t,s]=e["heart-beat"].split(",").map(i=>parseInt(i,10));if(this.heartbeatOutgoing!==0&&s!==0){const i=Math.max(this.heartbeatOutgoing,s);this.debug(`send PING every ${i}ms`),this._pinger=setInterval(()=>{this._webSocket.readyState===g.OPEN&&(this._webSocket.send(f.LF),this.debug(">>> PING"))},i)}if(this.heartbeatIncoming!==0&&t!==0){const i=Math.max(this.heartbeatIncoming,t);this.debug(`check PONG every ${i}ms`),this._ponger=setInterval(()=>{const o=Date.now()-this._lastServerActivityTS;o>i*2&&(this.debug(`did not receive server activity for the last ${o}ms`),this._closeOrDiscardWebsocket())},i)}}_closeOrDiscardWebsocket(){this.discardWebsocketOnCommFailure?(this.debug("Discarding websocket, the underlying socket may linger for a while"),this.discardWebsocket()):(this.debug("Issuing close on the websocket"),this._closeWebsocket())}forceDisconnect(){this._webSocket&&(this._webSocket.readyState===g.CONNECTING||this._webSocket.readyState===g.OPEN)&&this._closeOrDiscardWebsocket()}_closeWebsocket(){this._webSocket.onmessage=()=>{},this._webSocket.close()}discardWebsocket(){typeof this._webSocket.terminate!="function"&&M(this._webSocket,e=>this.debug(e)),this._webSocket.terminate()}_transmit(e){const{command:t,headers:s,body:i,binaryBody:o,skipContentLengthHeader:c}=e,r=new C({command:t,headers:s,body:i,binaryBody:o,escapeHeaderValues:this._escapeHeaderValues,skipContentLengthHeader:c});let a=r.serialize();if(this.logRawCommunication?this.debug(`>>> ${a}`):this.debug(`>>> ${r}`),this.forceBinaryWSFrames&&typeof a=="string"&&(a=new TextEncoder().encode(a)),typeof a!="string"||!this.splitLargeFrames)this._webSocket.send(a);else{let u=a;for(;u.length>0;){const S=u.substring(0,this.maxWebSocketChunkSize);u=u.substring(this.maxWebSocketChunkSize),this._webSocket.send(S),this.debug(`chunk sent = ${S.length}, remaining = ${u.length}`)}}}dispose(){if(this.connected)try{const e=Object.assign({},this.disconnectHeaders);e.receipt||(e.receipt=`close-${this._counter++}`),this.watchForReceipt(e.receipt,t=>{this._closeWebsocket(),this._cleanUp(),this.onDisconnect(t)}),this._transmit({command:"DISCONNECT",headers:e})}catch(e){this.debug(`Ignoring error during disconnect ${e}`)}else(this._webSocket.readyState===g.CONNECTING||this._webSocket.readyState===g.OPEN)&&this._closeWebsocket()}_cleanUp(){this._connected=!1,this._pinger&&(clearInterval(this._pinger),this._pinger=void 0),this._ponger&&(clearInterval(this._ponger),this._ponger=void 0)}publish(e){const{destination:t,headers:s,body:i,binaryBody:o,skipContentLengthHeader:c}=e,r=Object.assign({destination:t},s);this._transmit({command:"SEND",headers:r,body:i,binaryBody:o,skipContentLengthHeader:c})}watchForReceipt(e,t){this._receiptWatchers[e]=t}subscribe(e,t,s={}){s=Object.assign({},s),s.id||(s.id=`sub-${this._counter++}`),s.destination=e,this._subscriptions[s.id]=t,this._transmit({command:"SUBSCRIBE",headers:s});const i=this;return{id:s.id,unsubscribe(o){return i.unsubscribe(s.id,o)}}}unsubscribe(e,t={}){t=Object.assign({},t),delete this._subscriptions[e],t.id=e,this._transmit({command:"UNSUBSCRIBE",headers:t})}begin(e){const t=e||`tx-${this._counter++}`;this._transmit({command:"BEGIN",headers:{transaction:t}});const s=this;return{id:t,commit(){s.commit(t)},abort(){s.abort(t)}}}commit(e){this._transmit({command:"COMMIT",headers:{transaction:e}})}abort(e){this._transmit({command:"ABORT",headers:{transaction:e}})}ack(e,t,s={}){s=Object.assign({},s),this._connectedVersion===b.V1_2?s.id=e:s["message-id"]=e,s.subscription=t,this._transmit({command:"ACK",headers:s})}nack(e,t,s={}){return s=Object.assign({},s),this._connectedVersion===b.V1_2?s.id=e:s["message-id"]=e,s.subscription=t,this._transmit({command:"NACK",headers:s})}}class G{constructor(e={}){this.stompVersions=b.default,this.connectionTimeout=0,this.reconnectDelay=5e3,this.heartbeatIncoming=1e4,this.heartbeatOutgoing=1e4,this.splitLargeFrames=!1,this.maxWebSocketChunkSize=8*1024,this.forceBinaryWSFrames=!1,this.appendMissingNULLonIncoming=!1,this.discardWebsocketOnCommFailure=!1,this.state=p.INACTIVE;const t=()=>{};this.debug=t,this.beforeConnect=t,this.onConnect=t,this.onDisconnect=t,this.onUnhandledMessage=t,this.onUnhandledReceipt=t,this.onUnhandledFrame=t,this.onStompError=t,this.onWebSocketClose=t,this.onWebSocketError=t,this.logRawCommunication=!1,this.onChangeState=t,this.connectHeaders={},this._disconnectHeaders={},this.configure(e)}get webSocket(){var e;return(e=this._stompHandler)==null?void 0:e._webSocket}get disconnectHeaders(){return this._disconnectHeaders}set disconnectHeaders(e){this._disconnectHeaders=e,this._stompHandler&&(this._stompHandler.disconnectHeaders=this._disconnectHeaders)}get connected(){return!!this._stompHandler&&this._stompHandler.connected}get connectedVersion(){return this._stompHandler?this._stompHandler.connectedVersion:void 0}get active(){return this.state===p.ACTIVE}_changeState(e){this.state=e,this.onChangeState(e)}configure(e){Object.assign(this,e)}activate(){const e=()=>{if(this.active){this.debug("Already ACTIVE, ignoring request to activate");return}this._changeState(p.ACTIVE),this._connect()};this.state===p.DEACTIVATING?(this.debug("Waiting for deactivation to finish before activating"),this.deactivate().then(()=>{e()})):e()}_connect(){return y(this,null,function*(){if(yield this.beforeConnect(),this._stompHandler){this.debug("There is already a stompHandler, skipping the call to connect");return}if(!this.active){this.debug("Client has been marked inactive, will not attempt to connect");return}this.connectionTimeout>0&&(this._connectionWatcher&&clearTimeout(this._connectionWatcher),this._connectionWatcher=setTimeout(()=>{this.connected||(this.debug(`Connection not established in ${this.connectionTimeout}ms, closing socket`),this.forceDisconnect())},this.connectionTimeout)),this.debug("Opening Web Socket...");const e=this._createWebSocket();this._stompHandler=new j(this,e,{debug:this.debug,stompVersions:this.stompVersions,connectHeaders:this.connectHeaders,disconnectHeaders:this._disconnectHeaders,heartbeatIncoming:this.heartbeatIncoming,heartbeatOutgoing:this.heartbeatOutgoing,splitLargeFrames:this.splitLargeFrames,maxWebSocketChunkSize:this.maxWebSocketChunkSize,forceBinaryWSFrames:this.forceBinaryWSFrames,logRawCommunication:this.logRawCommunication,appendMissingNULLonIncoming:this.appendMissingNULLonIncoming,discardWebsocketOnCommFailure:this.discardWebsocketOnCommFailure,onConnect:t=>{if(this._connectionWatcher&&(clearTimeout(this._connectionWatcher),this._connectionWatcher=void 0),!this.active){this.debug("STOMP got connected while deactivate was issued, will disconnect now"),this._disposeStompHandler();return}this.onConnect(t)},onDisconnect:t=>{this.onDisconnect(t)},onStompError:t=>{this.onStompError(t)},onWebSocketClose:t=>{this._stompHandler=void 0,this.state===p.DEACTIVATING&&this._changeState(p.INACTIVE),this.onWebSocketClose(t),this.active&&this._schedule_reconnect()},onWebSocketError:t=>{this.onWebSocketError(t)},onUnhandledMessage:t=>{this.onUnhandledMessage(t)},onUnhandledReceipt:t=>{this.onUnhandledReceipt(t)},onUnhandledFrame:t=>{this.onUnhandledFrame(t)}}),this._stompHandler.start()})}_createWebSocket(){let e;if(this.webSocketFactory)e=this.webSocketFactory();else if(this.brokerURL)e=new WebSocket(this.brokerURL,this.stompVersions.protocolVersions());else throw new Error("Either brokerURL or webSocketFactory must be provided");return e.binaryType="arraybuffer",e}_schedule_reconnect(){this.reconnectDelay>0&&(this.debug(`STOMP: scheduling reconnection in ${this.reconnectDelay}ms`),this._reconnector=setTimeout(()=>{this._connect()},this.reconnectDelay))}deactivate(){return y(this,arguments,function*(e={}){var o;const t=e.force||!1,s=this.active;let i;if(this.state===p.INACTIVE)return this.debug("Already INACTIVE, nothing more to do"),Promise.resolve();if(this._changeState(p.DEACTIVATING),this._reconnector&&(clearTimeout(this._reconnector),this._reconnector=void 0),this._stompHandler&&this.webSocket.readyState!==g.CLOSED){const c=this._stompHandler.onWebSocketClose;i=new Promise((r,a)=>{this._stompHandler.onWebSocketClose=u=>{c(u),r()}})}else return this._changeState(p.INACTIVE),Promise.resolve();return t?(o=this._stompHandler)==null||o.discardWebsocket():s&&this._disposeStompHandler(),i})}forceDisconnect(){this._stompHandler&&this._stompHandler.forceDisconnect()}_disposeStompHandler(){this._stompHandler&&this._stompHandler.dispose()}publish(e){this._checkConnection(),this._stompHandler.publish(e)}_checkConnection(){if(!this.connected)throw new TypeError("There is no underlying STOMP connection")}watchForReceipt(e,t){this._checkConnection(),this._stompHandler.watchForReceipt(e,t)}subscribe(e,t,s={}){return this._checkConnection(),this._stompHandler.subscribe(e,t,s)}unsubscribe(e,t={}){this._checkConnection(),this._stompHandler.unsubscribe(e,t)}begin(e){return this._checkConnection(),this._stompHandler.begin(e)}commit(e){this._checkConnection(),this._stompHandler.commit(e)}abort(e){this._checkConnection(),this._stompHandler.abort(e)}ack(e,t,s={}){this._checkConnection(),this._stompHandler.ack(e,t,s)}nack(e,t,s={}){this._checkConnection(),this._stompHandler.nack(e,t,s)}}var d;(function(n){n[n.CONNECTING=0]="CONNECTING",n[n.OPEN=1]="OPEN",n[n.CLOSING=2]="CLOSING",n[n.CLOSED=3]="CLOSED"})(d=d||(d={}));class z{get stompClient(){return this._stompClient}constructor(e){this._queuedMessages=[];const t=e||new G;this._stompClient=t;const s=()=>{};this._beforeConnect=s,this._correlateErrors=()=>{},this._debug=s,this._connectionStatePre$=new h.BehaviorSubject(d.CLOSED),this._connectedPre$=this._connectionStatePre$.pipe(h.filter(i=>i===d.OPEN)),this.connectionState$=new h.BehaviorSubject(d.CLOSED),this.connected$=this.connectionState$.pipe(h.filter(i=>i===d.OPEN)),this.connected$.subscribe(()=>{this._sendQueuedMessages()}),this._serverHeadersBehaviourSubject$=new h.BehaviorSubject(null),this.serverHeaders$=this._serverHeadersBehaviourSubject$.pipe(h.filter(i=>i!==null)),this.stompErrors$=new h.Subject,this.unhandledMessage$=new h.Subject,this.unhandledReceipts$=new h.Subject,this.unhandledFrame$=new h.Subject,this.webSocketErrors$=new h.Subject}configure(e){const t=Object.assign({},e);t.beforeConnect&&(this._beforeConnect=t.beforeConnect,delete t.beforeConnect),t.correlateErrors&&(this._correlateErrors=t.correlateErrors,delete t.correlateErrors),this._stompClient.configure(t),t.debug&&(this._debug=t.debug)}activate(){this._stompClient.configure({beforeConnect:()=>y(this,null,function*(){this._changeState(d.CONNECTING),yield this._beforeConnect(this)}),onConnect:e=>{this._serverHeadersBehaviourSubject$.next(e.headers),this._changeState(d.OPEN)},onStompError:e=>{this.stompErrors$.next(e)},onWebSocketClose:()=>{this._changeState(d.CLOSED)},onUnhandledMessage:e=>{this.unhandledMessage$.next(e)},onUnhandledReceipt:e=>{this.unhandledReceipts$.next(e)},onUnhandledFrame:e=>{this.unhandledFrame$.next(e)},onWebSocketError:e=>{this.webSocketErrors$.next(e)}}),this._stompClient.activate()}deactivate(){return y(this,arguments,function*(e={}){this._changeState(d.CLOSING),yield this._stompClient.deactivate(e),this._changeState(d.CLOSED)})}connected(){return this.connectionState$.getValue()===d.OPEN}get active(){return this.stompClient.active}publish(e){const t=e.retryIfDisconnected==null?!0:e.retryIfDisconnected;if(this.connected())this._stompClient.publish(e);else if(t)this._debug("Not connected, queueing"),this._queuedMessages.push(e);else throw new Error("Cannot publish while broker is not connected")}_sendQueuedMessages(){const e=this._queuedMessages;if(this._queuedMessages=[],e.length!==0){this._debug(`Will try sending  ${e.length} queued message(s)`);for(const t of e)this._debug(`Attempting to send ${t}`),this.publish(t)}}watch(e,t={}){const s={subHeaders:{},unsubHeaders:{},subscribeOnlyOnce:!1};let i;return typeof e=="string"?i=Object.assign({},s,{destination:e,subHeaders:t}):i=Object.assign({},s,e),this._debug(`Request to subscribe ${i.destination}`),h.Observable.create(c=>{let r,a,u=this._connectedPre$;i.subscribeOnlyOnce&&(u=u.pipe(h.take(1)));const S=this.stompErrors$.subscribe(m=>{this._correlateErrors(m)===i.destination&&c.error(m)});return a=u.subscribe(()=>{this._debug(`Will subscribe to ${i.destination}`);let m=i.subHeaders;typeof m=="function"&&(m=m()),r=this._stompClient.subscribe(i.destination,v=>{c.next(v)},m)}),()=>{if(this._debug(`Stop watching connection state (for ${i.destination})`),a.unsubscribe(),S.unsubscribe(),this.connected()){this._debug(`Will unsubscribe from ${i.destination} at Stomp`);let m=i.unsubHeaders;typeof m=="function"&&(m=m()),r.unsubscribe(m)}else this._debug(`Stomp not connected, no need to unsubscribe from ${i.destination} at Stomp`)}}).pipe(h.share())}watchForReceipt(e,t){this._stompClient.watchForReceipt(e,t)}asyncReceipt(e){return h.firstValueFrom(this.unhandledReceipts$.pipe(h.filter(t=>t.headers["receipt-id"]===e)))}_changeState(e){this._connectionStatePre$.next(e),this.connectionState$.next(e)}}let w;const q=new Uint8Array(16);function K(){if(!w&&(w=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!w))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return w(q)}const l=[];for(let n=0;n<256;++n)l.push((n+256).toString(16).slice(1));function Q(n,e=0){return(l[n[e+0]]+l[n[e+1]]+l[n[e+2]]+l[n[e+3]]+"-"+l[n[e+4]]+l[n[e+5]]+"-"+l[n[e+6]]+l[n[e+7]]+"-"+l[n[e+8]]+l[n[e+9]]+"-"+l[n[e+10]]+l[n[e+11]]+l[n[e+12]]+l[n[e+13]]+l[n[e+14]]+l[n[e+15]]).toLowerCase()}const Y=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),W={randomUUID:Y};function J(n,e,t){if(W.randomUUID&&!e&&!n)return W.randomUUID();n=n||{};const s=n.random||(n.rng||K)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,e){t=t||0;for(let i=0;i<16;++i)e[t+i]=s[i];return e}return Q(s)}var D=(n=>(n.BPMN="/user/topic/bpmn",n.EVIDENCE="evidence",n.USER_LOCATION="/topic/user-location",n.COMMON_BROADCAST="/topic/common-broadcast",n.CONFIG="/topic/config",n.BPMN_EVENT="/user/topic/bpmn-event",n.DUTY_SCHEDULE_NOTIFY="/topic/duty-schedule-notify",n))(D||{}),T=(n=>(n.HEARTBEAT="hearbeat",n))(T||{});const O={[d.CONNECTING]:"与服务器断开连接，正在连接中",[d.CLOSED]:"与服务器断开连接",[d.OPEN]:"已经连接到服务器",[d.CLOSING]:"与服务器断开连接"},H={[d.CONNECTING]:"error",[d.CLOSED]:"error",[d.OPEN]:"success",[d.CLOSING]:"error"};class B{constructor(){_(this,"timeout",5e3);_(this,"reconnectDelay",5e3);_(this,"heartbeatTime",15e3);_(this,"baseUrl",`${location.protocol.startsWith("https")?"wss":"ws"}://${location.host}`);_(this,"url","/api/auth/ws/endpoint")}}class ${constructor(){_(this,"rxStomp",new z);_(this,"config",new B);_(this,"topicHandlers",{});_(this,"topicSubscrition",{});_(this,"disconnect$",new h.Subject);_(this,"connectionState$",new h.Subject)}init(e){for(const t in e)this.config[t]=e[t]}connect(e){this.configure(e),this.rxStomp.activate(),this.heartbeatSubscribe(),this.stateSubscribe()}disconnect(){this.rxStomp.deactivate(),this.disconnect$.next(!0),this.unsubscribeAll()}subscribe(e,t){this.topicHandlers[e]?this.topicHandlers[e].add(t):(this.topicHandlers[e]=new Set([t]),this.topicSubscrition[e]=this.rxStomp.watch({destination:e}).subscribe(s=>{this.topicHandlers[e].forEach(i=>i(JSON.parse(s.body)))}))}unsubscribe(e,t){var s,i,o;(s=this.topicHandlers[e])==null||s.delete(t),((i=this.topicHandlers[e])==null?void 0:i.size)===0&&((o=this.topicSubscrition[e])==null||o.unsubscribe(),this.topicSubscrition[e]=void 0)}unsubscribeAll(){for(const e in this.topicSubscrition)this.topicSubscrition[e].unsubscribe(),this.topicSubscrition[e]=void 0}publish(e,t){const s=J();return this.rxStomp.publish({headers:{receipt:s},destination:e,body:t}),h.from(this.rxStomp.asyncReceipt(s)).pipe(h.timeout({first:this.config.timeout}))}stateSubscribe(){const e=this.rxStomp.stompErrors$.subscribe(i=>{this.connectionState$.next({type:H[3],message:O[3]+i.body})}),t=this.rxStomp.webSocketErrors$.subscribe(i=>{this.connectionState$.next({type:H[3],message:O[3]+i.type})}),s=this.rxStomp.connectionState$.subscribe(i=>{this.connectionState$.next({type:H[i],message:O[i]}),i!==1&&this.rxStomp.activate()});this.disconnect$.subscribe(i=>{e.unsubscribe(),t.unsubscribe(),s.unsubscribe()})}configure(e){this.rxStomp.configure({brokerURL:this.config.baseUrl+this.config.url,connectHeaders:{Authorization:e},reconnectDelay:this.config.reconnectDelay,heartbeatIncoming:0,heartbeatOutgoing:this.config.timeout})}heartbeatSubscribe(){const e=h.interval(this.config.heartbeatTime).subscribe(()=>this.publish(T.HEARTBEAT,Date.now().toString()).subscribe({complete:()=>{},error:t=>{this.rxStomp.deactivate({force:!0})}}));this.disconnect$.subscribe(t=>{e.unsubscribe()})}}const L=N.createDecorator("WsSubscribe");function X(n){const e=N.getProtoMetadata(n,L.MetadataKey);if(!e||!e.length)return;const t=N.injectService($);for(const s of e){const{options:i,key:o}=s,c=r=>n[o].call(n,r);t.subscribe(i,c),x.onUnmounted(()=>{t.unsubscribe(i,c)})}}const Z={key:"WsSubscribe",handler:X};var U=(n=>(n.TASK_CREATED="task-created",n.TASK_ASSIGNED="task-assigned",n.TASK_COMPLETED="task-complete",n.TASK_CANCELLD="task-cancelled",n))(U||{}),V=(n=>(n.PROCESS_STARTED="process-started",n.PROCESS_UPDATED="process-updated",n.PROCESS_COMPLETED="process-completed",n.PROCESS_CANCELLED="process-cancelled",n.PROCESS_VARIABLE_UPDATED="process-variable-updated",n))(V||{});exports.EnumBpmnProcessAction=V;exports.EnumBpmnTaskAction=U;exports.EnumPublishDestination=T;exports.EnumTopic=D;exports.InformWebsocketText=O;exports.InformWebsocketType=H;exports.WebSocketService=$;exports.WebscoketConfig=B;exports.WsSubscribe=L;exports.WsSubscribeHandler=Z;
//# sourceMappingURL=szjw-ws.js.map
